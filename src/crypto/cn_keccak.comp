/** Keccak-f 1600 block permutation shader */
#version 450 core

#extension GL_ARB_gpu_shader_int64: require

#define HASH_STATE_SIZE_UINT64 25 /** 200 bytes */

layout(binding = 0) buffer State {
  uint64_t st[];
};

#define rotate64(x, s) (((x) << s) | ((x) >> (64 - s)))

// Keccak constants
const uint64_t rho[24] = {1UL,  3UL,  6UL,  10UL, 15UL, 21UL, 28UL, 36UL,
                                   45UL, 55UL, 2UL,  14UL, 27UL, 41UL, 56UL, 8UL,
                                   25UL, 43UL, 62UL, 18UL, 39UL, 61UL, 20UL, 44UL};

const uint pi[24] = {10, 7,  11, 17, 18, 3,  5,  16,
                     8,  21, 24, 4,  15, 23, 19, 13,
                     12, 2,  20, 14, 22, 9,  6,  1};

const uint64_t RC[24] = {
    0x0000000000000001UL, 0x0000000000008082UL, 0x800000000000808aUL,
    0x8000000080008000UL, 0x000000000000808bUL, 0x0000000080000001UL,
    0x8000000080008081UL, 0x8000000000008009UL, 0x000000000000008aUL,
    0x0000000000000088UL, 0x0000000080008009UL, 0x000000008000000aUL,
    0x000000008000808bUL, 0x800000000000008bUL, 0x8000000000008089UL,
    0x8000000000008003UL, 0x8000000000008002UL, 0x8000000000000080UL,
    0x000000000000800aUL, 0x800000008000000aUL, 0x8000000080008081UL,
    0x8000000000008080UL, 0x0000000080000001UL, 0x8000000080008008UL};


#define REPEAT6(e) e e e e e e
#define REPEAT24(e) REPEAT6(e e e e)
#define REPEAT5(e) e e e e e
#define FOR5(v, s, e)                                                          \
  v = 0;                                                                       \
  REPEAT5(e; v += s;)


void main()
{
  uint64_t b[5] = {0UL,0UL,0UL,0UL,0UL};
  uint64_t t = 0;
  uint x, y;

  uint index = gl_GlobalInvocationID.x;

  uint sti = index * HASH_STATE_SIZE_UINT64;

  for (int round = 0; round < 24; ++round) {
    // Theta
    FOR5(x, 1, b[x] = 0; FOR5(y, 5, b[x] ^= st[sti + x + y];))
    FOR5(x, 1, FOR5(y, 5, st[sti + y + x] ^= b[(x + 4) % 5] ^ rotate64(b[(x + 1) % 5], 1);))
    // Rho and pi
    t = st[sti + 1];
    x = 0;
    REPEAT24(b[0] = st[sti +pi[x]]; st[sti + pi[x]] = rotate64(t, rho[x]); t = b[0]; x++;)
    // Chi
    FOR5(y, 5,
         FOR5(x, 1, b[x] = st[sti + y + x];)
         FOR5(x, 1, st[sti + y + x] = b[x] ^ ((~b[(x + 1) % 5] & b[(x + 2) % 5]));)
      )
    // Iota
    st[sti + 0] ^= RC[round];

  }
}
